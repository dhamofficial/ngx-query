{"version":3,"sources":["../../src/advanced/rule.component.ts"],"names":[],"mappings":"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","file":"rule.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Field, DataType, QueryGroup, GroupOpType, Rule, FieldOpItem } from '../query.types';\r\nimport { QueryConfigurationService } from '../services/configuration.service';\r\n\r\n\r\nexport class RuleComponent {\r\n\r\n     fields: Array<Field> = [];\r\n     group: QueryGroup;\r\n    \r\n    set rule(val: Rule) {\r\n        this._rule = val;\r\n        this.fieldChanged();\r\n    }\r\n    get rule(): Rule {\r\n        return this._rule;\r\n    }\r\n\r\n    fieldOps: Array<FieldOpItem> = [];\r\n\r\n    private _rule: Rule;\r\n\r\n    constructor(private config: QueryConfigurationService) { }\r\n\r\n    addRule(): void {\r\n        var field: Field;\r\n        if (this.fields.length > 0) {\r\n            field = this.fields[0];\r\n        }\r\n\r\n        this.group.rules.push({\r\n            op: 'eq',\r\n            field: field,\r\n            data: '',\r\n            datas: []\r\n        });\r\n    }\r\n\r\n    removeRule(): void {\r\n        this.group.rules = this.group.rules.filter(x => x !== this.rule);\r\n    }\r\n\r\n    fieldChanged(): void {\r\n\r\n        if (this._rule.datas === undefined) {\r\n            this._rule.datas = [undefined, undefined];\r\n        }\r\n\r\n        var dataType: any = this.rule.field['type'] || DataType.any;\r\n        var dataTypeOp: any = this.config.dataTypeOps.find(x => x.dataType === dataType);\r\n        if (dataTypeOp && dataTypeOp !== null) {\r\n            this.fieldOps = dataTypeOp.ops;\r\n            if (this.fieldOps.length > 0 && this.fieldOps.findIndex(x => x.key === this.rule.op) < 0) {\r\n                this.rule.op = this.fieldOps[0].key;\r\n            }\r\n        } else {\r\n            this.fieldOps = [];\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'ngx-query-rule',\r\n    template:\r\n    `\r\n    <div class=\"col-md-12\">\r\n        <div class=\"form-group\">\r\n            <div class=\"col-md-3\">\r\n                <div class=\"input-group\">\r\n                    <div class=\"input-group-btn\">\r\n                        <button type=\"button\" class=\"btn btn-default\"\r\n                            (click)=\"addRule()\"><i class=\"glyphicon glyphicon-plus\"></i></button>\r\n                        <button type=\"button\" class=\"btn btn-default\"\r\n                            (click)=\"removeRule()\"><i class=\"glyphicon glyphicon-minus\"></i></button>\r\n                    </div>\r\n                    <select class=\"form-control\" [(ngModel)]=\"rule.field\" (change)=\"fieldChanged()\">\r\n                        <option *ngFor=\"let field of fields\" [ngValue]=\"field\" [innerHtml]=\"field.label\"></option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-2\">\r\n                <select class=\"form-control\" [(ngModel)]=\"rule.op\">\r\n                    <option *ngFor=\"let item of fieldOps\" [(ngValue)]=\"item.key\" [innerHtml]=\"item.label\"></option>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <ng-container *ngIf=\"rule.op!='bt'\" [ngTemplateOutlet]=\"rule.field.valueInputTemplate\"\r\n                    [ngOutletContext]=\"{rule:rule, dataIndex:0, custom: rule.field.custom}\"></ng-container>\r\n                <ul class=\"list-inline ngx-query-list-inline\" *ngIf=\"rule.op=='bt'\">\r\n                    <li><ng-container [ngTemplateOutlet]=\"rule.field.valueInputTemplate\"\r\n                            [ngOutletContext]=\"{rule:rule, dataIndex:0, custom: rule.field.custom}\">\r\n                        </ng-container>\r\n                    </li>\r\n                    <li><span>-</span></li>\r\n                    <li><ng-container [ngTemplateOutlet]=\"rule.field.valueInputTemplate\"\r\n                            [ngOutletContext]=\"{rule:rule, dataIndex:1, custom: rule.field.custom}\">\r\n                        </ng-container>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    `,\r\n    styles: [`\r\n        .ngx-query-list-inline{\r\n            margin-bottom: 0;\r\n        }\r\n    `]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: QueryConfigurationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fields': [{ type: Input },],\n'group': [{ type: Input },],\n'rule': [{ type: Input },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}