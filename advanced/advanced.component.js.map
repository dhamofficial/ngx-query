{"version":3,"sources":["../../src/advanced/advanced.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAmB,KAAA,EAAc,MAAO,eAAA,CAAgB;AAGjE,OAAO,EAAE,eAAA,EAAiB,aAAA,EAAc,MAAO,uBAAA,CAAwB;AAGvE;IAAA;QAEG,WAAM,GAAiB,EAAE,CAAC;IAyD7B,CAAC;IAvDC,sBAAI,4CAAa;aAKjB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAPD,UAAkB,GAAe;YAC/B,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;YAC1B,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC9D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACtD,CAAC;;;OAAA;IAUD,iCAAK,GAAL;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;IAC3C,CAAC;IAED,oCAAQ,GAAR;QACE,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC/C,CAAC;IAEO,oCAAQ,GAAhB,UAAiB,KAAiB;QAChC,IAAI,KAAK,GAAgB,EAAE,CAAC;QAC5B,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjE,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACpE,GAAG,CAAC,CAAgB,UAAY,EAAZ,KAAA,KAAK,CAAC,MAAM,EAAZ,cAAY,EAAZ,IAAY;gBAA3B,IAAM,KAAK,SAAA;gBACd,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;aAC5C;QACH,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAoBH,wBAAC;AAAD,CA3DA,AA2DC;;AAnBM,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,oBAAoB;gBAC9B,QAAQ,EAAE,qLAMT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AACK,gCAAc,GAA2C;IAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5B,eAAe,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAClC,CAAC","file":"advanced.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit, Input, Output } from '@angular/core';\r\n\r\nimport { Field, QueryGroup, Rule, GroupOpItem } from '../query.types';\r\nimport { cloneQueryGroup, generateQuery } from '../utils/query-helper';\r\n\r\n\r\nexport class AdvancedComponent {\r\n\r\n   fields: Array<Field> = [];\r\n  \r\n  set queryTemplate(val: QueryGroup) {\r\n    this._queryTemplate = val;\r\n    this.tempQueryTemplate = cloneQueryGroup(this._queryTemplate);\r\n    this._rules = this.getRules(this.tempQueryTemplate);\r\n  }\r\n  get queryTemplate(): QueryGroup {\r\n    return this._queryTemplate;\r\n  }\r\n\r\n  tempQueryTemplate: QueryGroup;\r\n\r\n  private _rules: Rule[];\r\n  private _queryTemplate: QueryGroup;\r\n\r\n  reset(): void {\r\n    this.queryTemplate = this._queryTemplate;\r\n  }\r\n\r\n  getQuery(): QueryGroup {\r\n    return generateQuery(this.tempQueryTemplate);\r\n  }\r\n\r\n  private getRules(group: QueryGroup): Rule[] {\r\n    var rules: Array<Rule> = [];\r\n    if (group.rules && group.rules != null && group.rules.length > 0) {\r\n      rules = rules.concat(group.rules);\r\n    }\r\n\r\n    if (group.groups && group.groups != null && group.groups.length > 0) {\r\n      for (const child of group.groups) {\r\n        rules = rules.concat(this.getRules(child));\r\n      }\r\n    }\r\n\r\n    return rules;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ngx-query-advanced',\r\n  template: `\r\n  <div class=\"row\">\r\n    <div class=\"form-horizontal\">\r\n      <ngx-query-group [group]=\"tempQueryTemplate\" [fields]=\"fields\"></ngx-query-group>\r\n    </div>\r\n  </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fields': [{ type: Input },],\n'queryTemplate': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}