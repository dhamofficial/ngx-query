{"version":3,"sources":["../src/query.component.ts"],"names":[],"mappings":"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","file":"query.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component, NgModule, OnInit, Input, Output, ContentChildren, QueryList,\r\n  ViewChild, ViewChildren, TemplateRef, EventEmitter, ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { Field, FieldOpItem, GroupOpItem, GroupOpType, QueryGroup, QueryMode } from './query.types';\r\nimport { ValueInputTemplateDirective } from './directives/value-input-template.directive';\r\nimport { FieldDirective } from './directives/field.directive';\r\nimport { translateTemplates, translateFields } from './utils/field-helper';\r\nimport { translateQueryGroup } from './utils/query-helper';\r\nimport { PlainComponent } from './plain/plain.component';\r\nimport { AdvancedComponent } from './advanced/advanced.component';\r\nimport { QueryConfigurationService } from './services/configuration.service';\r\n\r\n\r\nexport class QueryComponent {\r\n\r\n   query: EventEmitter<any> = new EventEmitter();\r\n\r\n   title: string;\r\n   mode: QueryMode = QueryMode.plain;\r\n  \r\n  set fieldTemplates(val: QueryList<FieldDirective>) {\r\n    this._fieldTemplates = val;\r\n\r\n    if (val) {\r\n      // only set this if results were brought back\r\n      const arr: FieldDirective[] = val.toArray();\r\n\r\n      if (arr.length) {\r\n        // translate them to normal objects\r\n        this.fields = translateTemplates(arr);\r\n\r\n        if (this._queryTemplates) {\r\n          this.queryTemplates = this._queryTemplates;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  get fieldTemplates(): QueryList<FieldDirective> {\r\n    return this._fieldTemplates;\r\n  }\r\n  \r\n  set fields(val: Field[]) {\r\n    this.translateFields(val, this._valueInputTemplates);\r\n    this.tempFields = val;\r\n  }\r\n  get fields(): Field[] {\r\n    return this.tempFields;\r\n  }\r\n  \r\n  set queryTemplates(val: Array<{ name: string, template: QueryGroup }>) {\r\n\r\n    this._queryTemplates = val;\r\n\r\n    this._queryTemplates.forEach(queryTemplate => {\r\n      this.translateQueryGroup(queryTemplate.template, this.tempFields);\r\n    });\r\n\r\n    this.queryTemplateChanged(this._queryTemplates[0]);\r\n  }\r\n  get queryTemplates(): Array<{ name: string, template: QueryGroup }> {\r\n    return this._queryTemplates;\r\n  }\r\n\r\n  tempFields: Array<Field>;\r\n  currentQueryTemplate: { name: string, template: QueryGroup };\r\n\r\n  private _fieldTemplates: QueryList<FieldDirective>;\r\n  private _valueInputTemplates: Array<ValueInputTemplateDirective>;\r\n\r\n  private _queryTemplates: Array<{ name: string, template: QueryGroup }> = [];\r\n  \r\n  private _plainQuery: PlainComponent;\r\n  \r\n  private _advancedQuery: AdvancedComponent;\r\n  \r\n  private set defaultValueInputTemplates(val: ValueInputTemplateDirective[]) {\r\n    this._valueInputTemplates = val;\r\n    this.translateFields(this.tempFields, this._valueInputTemplates);\r\n  }\r\n\r\n  constructor(public config: QueryConfigurationService) { }\r\n\r\n  getQuery(): QueryGroup {\r\n    var query: QueryGroup;\r\n    if (this.mode === QueryMode.plain) {\r\n      query = this._plainQuery.getQuery();\r\n    } else if (this.mode === QueryMode.advanced) {\r\n      query = this._advancedQuery.getQuery();\r\n    } else {\r\n      throw new Error(`Not implement the mode '${this.mode}'.`);\r\n    }\r\n    return query;\r\n  }\r\n\r\n  showPlainPanel(): void {\r\n    this.mode = QueryMode.plain;\r\n  }\r\n\r\n  showAdvancedPanel(): void {\r\n    this.mode = QueryMode.advanced;\r\n  }\r\n\r\n  queryTemplateChanged(queryTemplate: any): void {\r\n    this.currentQueryTemplate = queryTemplate;\r\n  }\r\n\r\n  resetQueryTemplate(): void {\r\n    if (this.mode === QueryMode.plain) {\r\n      this._plainQuery.reset();\r\n    }\r\n\r\n    if (this.mode === QueryMode.advanced) {\r\n      this._advancedQuery.reset();\r\n    }\r\n  }\r\n\r\n  executeQuery(): void {\r\n    var query: QueryGroup = this.getQuery();\r\n    this.query.emit(query);\r\n  }\r\n\r\n  private translateFields(fields: Field[], valueInputTemplates: Array<ValueInputTemplateDirective>): void {\r\n    if (fields && fields.length > 0 && valueInputTemplates && valueInputTemplates.length > 0) {\r\n      translateFields(fields, valueInputTemplates);\r\n    }\r\n  }\r\n\r\n  private translateQueryGroup(queryGroup: QueryGroup, fields: Array<Field>): void {\r\n    if (fields && fields !== null && fields.length > 0 && queryGroup !== null) {\r\n      translateQueryGroup(queryGroup, fields);\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ngx-query',\r\n  template: `\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">\r\n      <div class=\"pull-left\">\r\n        <h3 class=\"panel-title\">{{title}}</h3>\r\n      </div>\r\n      <div class=\"btn-toolbar pull-right\">\r\n\r\n        <div class=\"btn-group btn-group-xs\" *ngIf=\"queryTemplates.length>1\">\r\n          <button type=\"button\" class=\"btn btn-default dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <i class=\"glyphicon glyphicon-retweet\"></i> {{currentQueryTemplate.name}}\r\n            <span class=\"caret\"></span>\r\n          </button>\r\n          <ul class=\"dropdown-menu\">\r\n            <li *ngFor=\"let item of queryTemplates\"><a href=\"javascript:\" (click)=\"queryTemplateChanged(item)\">{{item.name}}</a></li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"btn-group  btn-group-xs\">\r\n          <button type=\"button\" class=\"btn\" (click)=\"showPlainPanel()\"\r\n            [ngClass]=\"{'btn-primary': mode=='plain', 'btn-default': mode!='plain'}\">\r\n            <i class=\"glyphicon glyphicon-filter\"></i> {{config.labels.buttons.quick}}</button>\r\n          <button type=\"button\" class=\"btn\" (click)=\"showAdvancedPanel()\"\r\n            [ngClass]=\"{'btn-primary': mode=='advanced', 'btn-default': mode!='advanced'}\">\r\n            <i class=\"glyphicon glyphicon-fire\"></i> {{config.labels.buttons.advanced}}</button>\r\n        </div>\r\n\r\n        <div class=\"btn-group btn-group-xs\">\r\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"resetQueryTemplate()\">\r\n            <i class=\"glyphicon glyphicon-repeat\"></i> {{config.labels.buttons.reset}}</button>\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"executeQuery()\">\r\n            <i class=\"glyphicon glyphicon-search\"></i> {{config.labels.buttons.search}}</button>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"clearfix\"></div>\r\n    </div>\r\n    <div class=\"panel-body\">\r\n      <ngx-query-plain [class.hide]=\"mode!='plain'\" #planQuery\r\n        [queryTemplate]=\"currentQueryTemplate.template\">\r\n      </ngx-query-plain>\r\n      <ngx-query-advanced [class.hide]=\"mode!='advanced'\" #advancedQuery\r\n        [queryTemplate]=\"currentQueryTemplate.template\" [fields]=\"tempFields\">\r\n      </ngx-query-advanced>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Value Input Templates -->\r\n  <ng-template ngx-query-value-input-template dataType=\"any\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <input type=\"text\" class=\"form-control\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n  </ng-template>\r\n  <ng-template ngx-query-value-input-template dataType=\"string\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <input type=\"text\" class=\"form-control\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n  </ng-template>\r\n  <ng-template ngx-query-value-input-template dataType=\"boolean\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <div class=\"checkbox\">\r\n      <label>\r\n        <input type=\"checkbox\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n      </label>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template ngx-query-value-input-template dataType=\"number\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <input type=\"number\" class=\"form-control\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n  </ng-template>\r\n  <ng-template ngx-query-value-input-template  dataType=\"date\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <input type=\"date\" class=\"form-control\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n  </ng-template>\r\n  <ng-template ngx-query-value-input-template dataType=\"datetime\" let-rule=\"rule\" let-dataIndex=\"dataIndex\">\r\n    <input type=\"date\" class=\"form-control\" [placeholder]=\"rule.field.label\" [(ngModel)]=\"rule.datas[dataIndex]\" />\r\n  </ng-template>\r\n  <!-- Value Input Templates -->\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  host: {\r\n    class: 'ngx-query'\r\n  }\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: QueryConfigurationService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'query': [{ type: Output },],\n'title': [{ type: Input },],\n'mode': [{ type: Input },],\n'fieldTemplates': [{ type: ContentChildren, args: [FieldDirective, ] },],\n'fields': [{ type: Input },],\n'queryTemplates': [{ type: Input },],\n'_plainQuery': [{ type: ViewChild, args: [PlainComponent, ] },],\n'_advancedQuery': [{ type: ViewChild, args: [AdvancedComponent, ] },],\n'defaultValueInputTemplates': [{ type: ViewChildren, args: [ValueInputTemplateDirective, ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}